[{"/Users/neerajgupta/Desktop/HouseMedWebsite/reactproject/src/index.js":"1","/Users/neerajgupta/Desktop/HouseMedWebsite/reactproject/src/Routerr.jsx":"2","/Users/neerajgupta/Desktop/HouseMedWebsite/reactproject/src/RouterNavBar.jsx":"3","/Users/neerajgupta/Desktop/HouseMedWebsite/reactproject/src/Components/UserProfile.jsx":"4","/Users/neerajgupta/Desktop/HouseMedWebsite/reactproject/src/Components/UserDashboard.jsx":"5","/Users/neerajgupta/Desktop/HouseMedWebsite/reactproject/src/Components/Footer.jsx":"6","/Users/neerajgupta/Desktop/HouseMedWebsite/reactproject/src/Components/FrontPage.jsx":"7","/Users/neerajgupta/Desktop/HouseMedWebsite/reactproject/src/Components/PostMed.jsx":"8","/Users/neerajgupta/Desktop/HouseMedWebsite/reactproject/src/Components/FetchMed.jsx":"9","/Users/neerajgupta/Desktop/HouseMedWebsite/reactproject/src/Components/SearchMed.jsx":"10","/Users/neerajgupta/Desktop/HouseMedWebsite/reactproject/src/Components/Loader.jsx":"11"},{"size":337,"mtime":1621343099741,"results":"12","hashOfConfig":"13"},{"size":1158,"mtime":1621343611053,"results":"14","hashOfConfig":"13"},{"size":11152,"mtime":1621343588315,"results":"15","hashOfConfig":"13"},{"size":4173,"mtime":1621343669811,"results":"16","hashOfConfig":"13"},{"size":3257,"mtime":1621343529906,"results":"17","hashOfConfig":"13"},{"size":1069,"mtime":1621343098065,"results":"18","hashOfConfig":"13"},{"size":27524,"mtime":1621343298836,"results":"19","hashOfConfig":"13"},{"size":4441,"mtime":1621343379995,"results":"20","hashOfConfig":"13"},{"size":3652,"mtime":1621343098043,"results":"21","hashOfConfig":"13"},{"size":4091,"mtime":1621343099091,"results":"22","hashOfConfig":"13"},{"size":146,"mtime":1621343098305,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1oigf03",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/neerajgupta/Desktop/HouseMedWebsite/reactproject/src/index.js",[],["51","52"],"/Users/neerajgupta/Desktop/HouseMedWebsite/reactproject/src/Routerr.jsx",[],"/Users/neerajgupta/Desktop/HouseMedWebsite/reactproject/src/RouterNavBar.jsx",[],"/Users/neerajgupta/Desktop/HouseMedWebsite/reactproject/src/Components/UserProfile.jsx",["53","54"],"import React, { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport \"../styles/userProfile.css\";\n\nfunction UserProfile() {\n  var [userrObj, setUserrObj] = useState({\n    uid: \"\",\n    uname: \"\",\n    mobile: \"\",\n    city: \"\",\n    address: \"\",\n    myfile: null,\n  });\n  var doUpdate = (event) => {\n    var { name, value } = event.target;\n    setUserrObj({\n      ...userrObj,\n      [name]: value,\n    });\n  };\n  var [fileObj, setFileObj] = useState(\"./images/imageupload.svg\");\n  function onPicChange(e) {\n    setUserrObj({ ...userrObj, [\"myfile\"]: e.target.files[0] });\n    setFileObj(URL.createObjectURL(e.target.files[0]));\n  }\n  var [responseMsg, setResponse] = useState(\"*\");\n  /*do save post*/\n  async function doSave() {\n    var url = \"http://localhost:7000/react/profile/save-profile\";\n\n    /**pic uploading**/\n    var formData = new FormData();\n    for (var x in userrObj) {\n      formData.append(x, userrObj[x]);\n    }\n    var response = await axios.post(url, formData, {\n      headers: { \"Content-Type\": \"multipart/form-data\" },\n    });\n    alert(JSON.stringify(response.data));\n    setResponse(response.msg);\n  }\n  /*do update post */\n  async function doUpdatebtn() {\n    var url = \"http://localhost:7000/react/profile/update-profile\";\n\n    var response = await axios.post(url, userrObj);\n    alert(JSON.stringify(response.data));\n    setResponse(response.data.msg);\n  }\n  var btn = {\n    backgroundColor: \"#62B1F6\",\n    border: \"none\",\n    margin: \"0 .3rem\",\n  };\n  return (\n    <>\n      <Form className=\"form\" method=\"POST\">\n        <div className=\"form-div\">\n          <div className=\"img-div\">\n            <Form.Group>\n              <center>\n                <img src={fileObj} className=\"image\" alt=\"userProfile\"></img>\n              </center>\n              <center>\n                <Form.File\n                  id=\"exampleFormControlFile1\"\n                  label=\"Id proof\"\n                  onChange={onPicChange}\n                />\n              </center>\n            </Form.Group>\n          </div>\n          <div className=\"input-div\">\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>uid</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"user id\"\n                name=\"uid\"\n                value={userrObj.uid}\n                onChange={doUpdate}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"user name\"\n                name=\"uname\"\n                onChange={doUpdate}\n                value={userrObj.uname}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>mobile</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"e.g. 999-999-9999\"\n                name=\"mobile\"\n                onChange={doUpdate}\n                value={userrObj.mobile}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>city</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"city\"\n                name=\"city\"\n                onChange={doUpdate}\n                value={userrObj.city}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>address</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"e.g. Bay Area ,san francisco,CA\"\n                name=\"address\"\n                onChange={doUpdate}\n                value={userrObj.address}\n              />\n            </Form.Group>\n            <Button type=\"button\" onClick={doSave} style={btn}>\n              save\n            </Button>\n            &nbsp;&nbsp;\n            <Button type=\"button\" onClick={doUpdatebtn} style={btn}>\n              update\n            </Button>\n          </div>\n        </div>\n      </Form>\n    </>\n  );\n}\nexport default UserProfile;\n","/Users/neerajgupta/Desktop/HouseMedWebsite/reactproject/src/Components/UserDashboard.jsx",[],"/Users/neerajgupta/Desktop/HouseMedWebsite/reactproject/src/Components/Footer.jsx",[],"/Users/neerajgupta/Desktop/HouseMedWebsite/reactproject/src/Components/FrontPage.jsx",[],"/Users/neerajgupta/Desktop/HouseMedWebsite/reactproject/src/Components/PostMed.jsx",["55","56","57"],"import React, { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\n\nfunction PostMed() {\n  var [medObj, setMedObj] = useState({\n    uid: \"\",\n    medname: \"\",\n    company: \"\",\n    expdate: \"\",\n    quantity: \"\",\n    units: \"\",\n    city: \"\",\n    myfilee: null,\n  });\n  var doUpdate = (event) => {\n    var { name, value } = event.target;\n    setMedObj({\n      ...medObj,\n      [name]: value,\n    });\n  };\n  var [fileeObj, setFileObj] = useState(\"./images/imageupload.svg\");\n  function onPicChange(e) {\n    setMedObj({ ...medObj, [\"myfile\"]: e.target.files[0] });\n    setFileObj(URL.createObjectURL(e.target.files[0]));\n  }\n  var [responseMsg, setResponse] = useState(\"*\");\n  /*do save post*/\n  async function saveMed() {\n    var url = \"http://localhost:7000/react/profile/medicine/save-medicine\";\n\n    /**pic uploading**/\n    var formData = new FormData();\n    for (var x in medObj) {\n      formData.append(x, medObj[x]);\n    }\n    var response = await axios.post(url, formData, {\n      headers: { \"Content-Type\": \"multipart/form-data\" },\n    });\n    alert(JSON.stringify(response.data));\n    setResponse(response.msg);\n  }\n  var btn = {\n    backgroundColor: \"#62B1F6\",\n    border: \"none\",\n    margin: \"0 .3rem\",\n  };\n  return (\n    <>\n      <Form className=\"form\" method=\"POST\">\n        <div className=\"form-div\">\n          <div className=\"img-div\">\n            <Form.Group>\n              <center>\n                <img src={fileeObj} className=\"image\" alt-=\"image\"></img>\n              </center>\n              <center>\n                <Form.File\n                  id=\"exampleFormControlFile1\"\n                  label=\"pic of medicine\"\n                  onChange={onPicChange}\n                />\n            </center>\n            </Form.Group>\n          </div>\n          <div className=\"input-div\">\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>uid</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"user id\"\n                name=\"uid\"\n                value={medObj.uid}\n                onChange={doUpdate}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Medicine name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"user name\"\n                name=\"medname\"\n                onChange={doUpdate}\n                value={medObj.medname}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>company</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"e.g. 999-999-9999\"\n                name=\"company\"\n                onChange={doUpdate}\n                value={medObj.company}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>exp date</Form.Label>\n              <Form.Control\n                type=\"date\"\n                placeholder=\"city\"\n                name=\"expdate\"\n                onChange={doUpdate}\n                value={medObj.expdate}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>quantity</Form.Label>\n              <Form.Control\n                type=\"number\"\n                placeholder=\"quantity\"\n                name=\"quantity\"\n                onChange={doUpdate}\n                value={medObj.quantity}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>units</Form.Label>\n              <Form.Control\n                type=\"number\"\n                placeholder=\"units\"\n                name=\"units\"\n                onChange={doUpdate}\n                value={medObj.units}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>city</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"city\"\n                name=\"city\"\n                onChange={doUpdate}\n                value={medObj.city}\n              />\n            </Form.Group>\n\n            <Button type=\"button\" onClick={saveMed} style={btn}>\n              Post\n            </Button>\n          </div>\n        </div>\n      </Form>\n    </>\n  );\n}\nexport default PostMed;\n","/Users/neerajgupta/Desktop/HouseMedWebsite/reactproject/src/Components/FetchMed.jsx",["58","59","60"],"import React, { useEffect, useState } from \"react\";\nimport { Container, Row, Button, Table, Form } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport axios from \"axios\";\nimport Loader from \"./Loader\";\n\nfunction FetchMed() {\n  var [medObj, setMedObj] = useState({\n    uid: \"\",\n  });\n  var [loading, setLoading] = useState();\n\n  var doUpdate = (e) => {\n    var { name, value } = e.target;\n    setMedObj({\n      ...medObj,\n      [name]: value,\n    });\n  };\n  var [jsonAry, fillJsonArray] = useState([{ uid: \"\" }]);\n  useEffect(async () => {\n    setTimeout(async () => {\n      setLoading(true);\n      await doFetch();\n    }, 1000);\n  }, []);\n  async function doFetch() {\n    var url = \"http://localhost:7000/react/profile/medicine/fetchMed\";\n    var response = await axios.post(url, medObj);\n    fillJsonArray(response.data);\n    console.log(response.data);\n    fillJsonArray(response.data);\n  }\n\n  async function doDelete(uid, medname) {\n    var url =\n      \"http://localhost:7000/react/profile/medicine/delete-medicine/\" +\n      uid +\n      \"/\" +\n      medname;\n    var response = await axios.post(url, medObj);\n    // alert(medObj.data);\n    await alert(JSON.stringify(response.data));\n  }\n  var btn = {\n    backgroundColor: \"#62B1F6\",\n    border: \"none\",\n    margin: \"0 .3rem\",\n  };\n  var row = {\n    boxShadow: \"2px 2px 2px 2px rgba(0,0,0,0.1)\",\n    margin: \"4rem\",\n    padding: \".5rem\",\n  };\n  var tablee = {\n    width: \"100%\",\n  };\n  return (\n    <>\n      <Form>\n        <Form.Group controlId=\"formBasicPassword\">\n          {/* <Form.Label>uid</Form.Label> */}\n          <p>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"enter uid\"\n              name=\"uid\"\n              onChange={doUpdate}\n              value={medObj.address}\n              style={{\n                width: \"20%\",\n                margin: \"1rem auto\",\n                display: \"inline-block\",\n              }}\n            />\n            <Button\n              type=\"button\"\n              onClick={doFetch}\n              style={{ textAlign: \"center\" }}\n              style={btn}\n            >\n              fetch\n            </Button>\n          </p>\n        </Form.Group>\n      </Form>\n      {loading ? (\n        <Container>\n          <Row>\n            <Table style={tablee}>\n              <thead>\n                <tr>\n                  <th>Uid</th>\n                  <th>medicine name</th>\n                  <th>company</th>\n                  <th>exp date</th>\n                  <th>quantity</th>\n                  <th>units</th>\n                  <th>city</th>\n                  <th>picname</th>\n                  <th>delete</th>\n                </tr>\n              </thead>\n              {jsonAry.map((obj) => {\n                return (\n                  <tr style={row}>\n                    <td>{obj.uid}</td>\n                    <td>{obj.medname}</td>\n                    <td>{obj.company}</td>\n                    <td> {obj.expdate}</td>\n                    <td> {obj.quantity}</td>\n                    <td> {obj.units}</td>\n                    <td> {obj.city}</td>\n                    <td> {obj.mpic}</td>\n                    <td>\n                      <Button\n                        style={btn}\n                        onClick={() => doDelete(obj.uid, obj.medname)}\n                      >\n                        Delist\n                      </Button>\n                    </td>\n                  </tr>\n                );\n              })}\n            </Table>\n          </Row>\n        </Container>\n      ) : (\n        <center>\n          <Loader />\n        </center>\n      )}\n    </>\n  );\n}\nexport default FetchMed;\n","/Users/neerajgupta/Desktop/HouseMedWebsite/reactproject/src/Components/SearchMed.jsx",["61","62","63"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Button, Card, Col } from \"react-bootstrap\";\n\nfunction MedicineFinder() {\n  //all cities\n  var [jsonAryCity, filljsonAryCity] = useState([\"city\"]);\n\n  var [mobile, setmobile] = useState(\"\");\n  //Medicines according to city selected\n  var [medicineObj, fillMedicine] = useState([]);\n  //Provider on basis of city and medicine selected\n  var [providerObj, fillProviderObj] = useState([]);\n\n  var [finder, fetchfinder] = useState({\n    cityy: \"\",\n    medname: \"\",\n  });\n\n  var doUpdate = (event) => {\n    var { name, value } = event.target;\n    fetchfinder({\n      ...finder,\n      [name]: value,\n    });\n  };\n\n  //FETCH ALL DISTINCT CITIES\n  useEffect(async () => {\n    var url = \"http://localhost:7000/react/profile/medicine/fetch-all\";\n    var response = await axios.post(url);\n    filljsonAryCity(response.data);\n  }, []);\n\n  //fetching medicines acc to city\n  async function doFill(e) {\n    doUpdate(e);\n    var url =\n      \"http://localhost:7000/react/profile/medicine/fetch-medicine/\" +\n      e.target.value;\n    var response = await axios.post(url);\n    fillMedicine(response.data);\n    //alert(JSON.stringify(response.data));\n  }\n\n  //fetching all details in card\n  async function showCard(finder) {\n    var url =\n      \"http://localhost:7000/react/profile/medicine/fetch-provider/\" +\n      finder.cityy +\n      \"/\" +\n      finder.medname;\n    var response = await axios.post(url);\n    fillProviderObj(response.data);\n    //alert(JSON.stringify(response.data));\n  }\n\n  //fetching mobile number\n  async function doFetchProviderDetails(obj) {\n    // alert(JSON.stringify(obj));\n    var url = \"http://localhost:7000/react/profile/fetch-details\";\n    var response = await axios.post(url, obj);\n    // alert(JSON.stringify(response.data));\n    var { mobile } = response.data[0];\n    alert(mobile);\n    setmobile(mobile);\n  }\n  var btn = {\n    backgroundColor: \"#62B1F6\",\n    border: \"none\",\n    margin: \"0 .3rem\",\n  };\n  var picture;\n  return (\n    <div>\n      <center>\n        {/* city */}\n        City:\n        <select\n          id=\"template-select\"\n          value={finder.cityy}\n          name=\"cityy\"\n          onChange={doFill}\n        >\n          <option>Select City</option>\n          {jsonAryCity.map((obj) => {\n            return <option value={obj}>{obj}</option>;\n          })}\n        </select>\n        &nbsp;&nbsp;\n        {/*medicine */}\n        Medicine:\n        <select\n          id=\"template-select\"\n          value={finder.medname}\n          name=\"medname\"\n          onChange={doUpdate}\n        >\n          <option>Select Medicine</option>\n          {medicineObj.map((obj) => {\n            return <option value={obj}>{obj}</option>;\n          })}\n        </select>\n        <br></br>\n        {/* FIND MEDICINE PROVIDERS */}\n        <br></br>\n        <Button style={btn} onClick={() => showCard(finder)}>\n          Find Medicine Providers\n        </Button>\n      </center>\n\n      {/*SHOW IN CARDS*/}\n\n      {providerObj.map((obj) => {\n        return (\n          <Col md={2}>\n            <Card style={{ width: \"20rem\", height: \"27rem\", margin: \"2.7rem\" }}>\n              <Card.Body>\n                <Card.Title>\n                  <noscript>{(picture = \"/uploads/\" + obj.mpic)}</noscript>\n                  <p>\n                    <img\n                      src={picture}\n                      style={{ width: \"100%\", height: \"11rem\" }}\n                    ></img>\n                  </p>{\" \"}\n                </Card.Title>\n                <Card.Text>\n                  <p>Uid : {obj.uid}</p>\n                  <p>Medicine:{obj.medname}</p>\n                  <p>Company:{obj.company}</p>\n                  <p>Expiry Date:{obj.expdate}</p>\n                </Card.Text>\n\n                <Button style={btn} onClick={() => doFetchProviderDetails(obj)}>\n                  Show Details\n                </Button>\n              </Card.Body>\n            </Card>\n          </Col>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default MedicineFinder;\n","/Users/neerajgupta/Desktop/HouseMedWebsite/reactproject/src/Components/Loader.jsx",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":24,"column":32,"nodeType":"70","messageId":"71","endLine":24,"endColumn":61,"fix":"72"},{"ruleId":"73","severity":1,"message":"74","line":27,"column":8,"nodeType":"75","messageId":"76","endLine":27,"endColumn":19},{"ruleId":"68","severity":1,"message":"69","line":25,"column":28,"nodeType":"70","messageId":"71","endLine":25,"endColumn":57,"fix":"77"},{"ruleId":"73","severity":1,"message":"74","line":28,"column":8,"nodeType":"75","messageId":"76","endLine":28,"endColumn":19},{"ruleId":"78","severity":1,"message":"79","line":56,"column":17,"nodeType":"80","endLine":56,"endColumn":68},{"ruleId":"81","severity":1,"message":"82","line":21,"column":13,"nodeType":"83","endLine":26,"endColumn":4},{"ruleId":"81","severity":1,"message":"84","line":26,"column":6,"nodeType":"85","endLine":26,"endColumn":8,"suggestions":"86"},{"ruleId":"87","severity":1,"message":"88","line":80,"column":15,"nodeType":"89","endLine":80,"endColumn":26},{"ruleId":"73","severity":1,"message":"90","line":10,"column":8,"nodeType":"75","messageId":"76","endLine":10,"endColumn":14},{"ruleId":"81","severity":1,"message":"82","line":30,"column":13,"nodeType":"83","endLine":34,"endColumn":4},{"ruleId":"78","severity":1,"message":"79","line":123,"column":21,"nodeType":"80","endLine":126,"endColumn":22},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-useless-computed-key","Unnecessarily computed property [\"myfile\"] found.","Property","unnecessarilyComputedProperty",{"range":"93","text":"94"},"no-unused-vars","'responseMsg' is assigned a value but never used.","Identifier","unusedVar",{"range":"95","text":"94"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'doFetch'. Either include it or remove the dependency array.","ArrayExpression",["96"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'mobile' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[588,598],"\"myfile\"",[574,584],{"desc":"97","fix":"98"},"Update the dependencies array to be: [doFetch]",{"range":"99","text":"100"},[660,662],"[doFetch]"]